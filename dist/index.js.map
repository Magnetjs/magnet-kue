{"version":3,"sources":["index.js"],"names":[],"mappings":";;;;;;;;;;;;QAAO,6BAA6B;;kBAErB,IAAI;;;;0BACI,aAAa;;;;oBACrB,OAAO;;;;mBACN,KAAK;;;;IAEA,KAAK;AACb,WADQ,KAAK,CACZ,GAAG,EAAE;0BADE,KAAK;;AAEtB,QAAI,CAAC,GAAG,GAAG,GAAG,CAAC;GAChB;;eAHkB,KAAK;;mCAKlB;UACA,MAAM,EACN,MAAM,EAKD,GAAG;;;;;;;mBANO,kBAAG,MAAM,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;;AAA5D,kBAAM;AACN,kBAAM,GAAG,6BAAW,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,KAAK,CAAC,MAAM,CAAC,KAAK,CAAC;;AAC3D,gBAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,KAAK,GAAG,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,EAAE,CAAC;;AAEnD,gBAAI,CAAC,GAAG,CAAC,KAAK,GAAG,iBAAI,WAAW,CAAC,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC;;AAEtD,iBAAS,GAAG,IAAI,MAAM,EAAE;AACtB,kBAAI,MAAM,CAAC,cAAc,CAAC,GAAG,CAAC,EAAE;;AAC9B,sBAAI,KAAK,GAAG,MAAM,CAAC,GAAG,CAAC,CAAC;AACxB,sBAAI,IAAI,GAAG,KAAK,CAAC,IAAI,IAAI,GAAG,CAAC;;AAE7B,wBAAK,GAAG,CAAC,KAAK,CAAC,OAAO,CAAC,IAAI,EAAE,KAAK,CAAC,WAAW,IAAI,CAAC,EAAE,UAAC,IAAI,EAAE,IAAI,EAAK;AACnE,yCAAG,wBAAA;;;;;mCACK,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,IAAI,EAAE,IAAI,CAAC;;;;;;;qBACrC,EAAC,IAAI,OAAM,CAAC,CACZ,IAAI,CAAC,UAAU,MAAM,EAAE;AACtB,0BAAI,CAAC,IAAI,EAAE,MAAM,CAAC,CAAC;qBACpB,EAAE,UAAC,GAAG,EAAK;AACV,4BAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,0BAAI,CAAC,GAAG,CAAC,CAAC;qBACX,CAAC,SACI,CAAC,UAAC,GAAG,EAAK;AACd,4BAAK,GAAG,CAAC,GAAG,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC;AACxB,0BAAI,CAAC,GAAG,CAAC,CAAC;qBACX,CAAC,CAAC;mBACJ,CAAC,CAAC;;eACJ;aACF;;;;;;;KACF;;;SAlCkB,KAAK;;;qBAAL,KAAK","file":"index.js","sourcesContent":["import 'source-map-support/register';\n\nimport co from 'co';\nimport requireAll from 'require-all';\nimport fs from 'mz/fs';\nimport kue from 'kue';\n\nexport default class Queue {\n  constructor(app) {\n    this.app = app;\n  }\n\n  *setup() {\n    let exists = yield fs.exists(this.app.config.paths.server.queue);\n    let queues = requireAll(this.app.config.paths.server.queue);\n    this.app.config.kue.redis = this.app.config.kue.db;\n\n    this.app.queue = kue.createQueue(this.app.config.kue);\n\n    for (let key in queues) {\n      if (queues.hasOwnProperty(key)) {\n        let queue = queues[key];\n        let name = queue.name || key;\n\n        this.app.queue.process(name, queue.concurrency || 1, (data, done) => {\n          co(function *() {\n            yield queue.process.call(this, data);\n          }.bind(this))\n          .then(function (result) {\n            done(null, result);\n          }, (err) => {\n            this.app.log.error(err);\n            done(err);\n          })\n          .catch((err) => {\n            this.app.log.error(err);\n            done(err);\n          });\n        });\n      }\n    }\n  }\n}\n"],"sourceRoot":"/source/"}